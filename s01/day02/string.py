#author:wang fang
name="my \tname is wangfang"
print(name.count('n'))
#首行字母大写
print(name.capitalize())
#居中显示
print(name.center(50,'-'))
#空格占多少位
print(name.expandtabs(tabsize=8))
#判断结尾是否正确
print(name.endswith('m'))
print(name.startswith('m'))
#判断是不是标致符
print(name.isidentifier())
print(name.find('n'))
print(name.isalnum())
print(name.isdigit())
print(name.isalpha())
print(name.islower())
print(name.isupper())
print(name.isspace())
print(','.join(name))

print(name.upper())
print(name.lower())
print(name.partition('\t'))
print(name.replace('wangfang','wangjia'))
#返回发现子串子元素的S中的最高索引
print(name.rfind('p'))
print(name.rindex('n'))
#返回S中的单词列表，使用sep作为分隔符字符串
print(name.rsplit())
#返回S在一个长宽字符串中右对齐。填充是使用指定的填充字符完成（默认为空格）
print(name.rjust(10))
#去掉尾随空格或者其他
print(name.rstrip('g'))
#如果sep未指定或未指定，则任何空白字符串是分隔符，空字符串是从结果中删除。
print('分割',name.split())
print(name.title())
#在左边用零填充一个数字字符串S来填充一个字段指定宽度的。字符串S永远不会被截断
print(name.zfill(50))